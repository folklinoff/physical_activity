// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ActivityRequest/{id}": {
            "delete": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity": {
            "get": {
                "description": "Get all items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Add item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add item",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    }
                }
            }
        },
        "/activity/{id}": {
            "get": {
                "description": "Get one item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get one item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update item",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {}
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/activity_request": {
            "get": {
                "description": "Get all items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.ActivityRequest"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Add item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add item",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ActivityRequest"
                        }
                    }
                }
            }
        },
        "/activity_request/{id}": {
            "get": {
                "description": "Get one item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get one item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ActivityRequest"
                        }
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update item",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ActivityRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ActivityRequest"
                        }
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin": {
            "post": {
                "description": "Get one item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Получение статистики",
                "parameters": [
                    {
                        "description": "Principal",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Principal"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "Get one item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Получение статистики",
                "parameters": [
                    {
                        "description": "Pricipal",
                        "name": "principal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Principal"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "description": "Получить список всех сотрудников",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Получить список всех сотрудников",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "employees": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Employee"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Регистрация сотрудника в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Регистрация сотрудника в системе",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                }
            }
        },
        "/employee/data": {
            "get": {
                "description": "Получить информацию о сотруднике",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Получить информацию о сотруднике",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/login": {
            "post": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Аутентификация сотрудника",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/points": {
            "put": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Выбор направления для пожертвований",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "Получить информацию о сотруднике",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Получить информацию о сотруднике",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление информации о сотруднике в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Обновление информации о сотруднике в системе",
                "parameters": [
                    {
                        "description": "data",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Employee"
                        }
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/{id}/activity": {
            "post": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Уведомление об активности",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/{id}/path": {
            "post": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Уведомление об активности",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/funds": {
            "get": {
                "description": "Получение списка всех фондов в кратком формате",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fund"
                ],
                "summary": "Получение списка всех фондов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "funds": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Fund"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Создание нового фонда (осуществляется самими фондами)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fund"
                ],
                "summary": "Создание фонда",
                "parameters": [
                    {
                        "description": "Fund model",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.msg"
                        }
                    }
                }
            },
            "post": {
                "description": "Создание нового фонда (осуществляется самими фондами)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fund"
                ],
                "summary": "Создание фонда",
                "parameters": [
                    {
                        "description": "Fund model",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.msg"
                        }
                    }
                }
            }
        },
        "/funds/data": {
            "get": {
                "description": "Получение полной информации о фонде",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fund"
                ],
                "summary": "Получение информации о фонде",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fund"
                        }
                    }
                }
            }
        },
        "/funds/login": {
            "post": {
                "description": "Создание нового фонда (осуществляется самими фондами)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fund"
                ],
                "summary": "Создание фонда",
                "parameters": [
                    {
                        "description": "Fund model",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.msg"
                        }
                    }
                }
            }
        },
        "/funds/{id}": {
            "get": {
                "description": "Получение полной информации о фонде",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fund"
                ],
                "summary": "Получение информации о фонде",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fund"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.msg"
                        }
                    }
                }
            }
        },
        "/leaderboard": {
            "get": {
                "description": "Delete item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employees"
                ],
                "summary": "Вывод десяти лучших сотрудников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "criteria",
                        "name": "criteria",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Get one item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Получение статистики",
                "parameters": [
                    {
                        "description": "Principal",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Criterias"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "400 StatusBadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "404 not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.Criterias": {
            "type": "object",
            "properties": {
                "activity_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "daytime": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "departments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "employee_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "goals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "period": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.JSONResult": {
            "type": "object"
        },
        "handlers.msg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ActivityRequest": {
            "type": "object",
            "properties": {
                "hours": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ActivityType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.Award": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "awards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Award"
                    }
                },
                "balance": {
                    "type": "integer"
                },
                "customActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ActivityType"
                    }
                },
                "department": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Event"
                    }
                },
                "fund_id": {
                    "type": "integer"
                },
                "goal_id": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "joggings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Jogging"
                    }
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "total_points": {
                    "type": "integer"
                },
                "trainings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Training"
                    }
                },
                "walks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Walk"
                    }
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "model.Event": {
            "type": "object",
            "properties": {
                "employee_id": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "host_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prize": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "winner_id": {
                    "type": "integer"
                }
            }
        },
        "model.Fund": {
            "type": "object",
            "properties": {
                "foundation_date": {
                    "type": "string"
                },
                "founder_name": {
                    "type": "string"
                },
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Goal"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                }
            }
        },
        "model.Goal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                }
            }
        },
        "model.Jogging": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "prize_type": {
                    "type": "string"
                }
            }
        },
        "model.Principal": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.Training": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.Walk": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "prize_type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "188.72.77.222:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "АПИ сервера для корпоративной системы благотворительности",
	Description:      "Реализованный в рамках хакатона сервер для корпоративной системы благотворительности",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
